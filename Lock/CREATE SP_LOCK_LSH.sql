USE WOORIM_230215
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE SP_LOCK_LSH --- 2023/04/07 00:00
@SPID1 INT = NULL,		/* SERVER PROCESS ID TO CHECK FOR LOCKS */
@SPID2 INT = NULL		/* OTHER PROCESS ID TO CHECK FOR LOCKS */
AS
/******************************************************************************
** File:
** Name: SP_LOCK_LSH
**
** Desc: SP_LOCK 조회
**
** EXEC dbo.SP_LOCK_LSH 
**
** Return values:
**
** Called by: 
**
** Parameters:
** Input Output
** ---------- -----------
**
** Auth: 이상현
** Date: 2023.04.07
*******************************************************************************
** Change History
*******************************************************************************
** Date:		Author:	Description:
** ---------	------	-----------------
*******************************************************************************/

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

BEGIN
	-- ##1. MODE = 'X'인 SPID 찾기
	SELECT 	DISTINCT CONVERT (SMALLINT, REQ_SPID) AS SPID,
					 RSC_DBID AS DBID,
					 SUBSTRING (V.NAME, 1, 4) AS TYPE,
					 SUBSTRING (U.NAME, 1, 8) AS MODE,
					 SUBSTRING (X.NAME, 1, 5) AS STATUS

	  FROM 	MASTER.DBO.SYSLOCKINFO,
			MASTER.DBO.SPT_VALUES V,
			MASTER.DBO.SPT_VALUES X,
			MASTER.DBO.SPT_VALUES U

	  WHERE MASTER.DBO.SYSLOCKINFO.RSC_TYPE = V.NUMBER
	    AND MASTER.DBO.SYSLOCKINFO.REQ_STATUS = X.NUMBER
	    AND MASTER.DBO.SYSLOCKINFO.REQ_MODE + 1 = U.NUMBER
	    AND V.TYPE = 'LR'
	    AND X.TYPE = 'LS'
	    AND U.TYPE = 'L'
	    AND SUBSTRING (U.NAME, 1, 8) = 'X'
	ORDER BY SPID

	-- ##2. 지정된 SPID에 의해 실행된 마지막 SQL문 및 해당 IP 확인

	CREATE TABLE #TMP
	(
		SEQ		  SMALLINT IDENTITY(1,1),
		SPID	  SMALLINT,
		EVENTTYPE NVARCHAR(30),
		PARAMETERS INT,
		EVENTINFO NVARCHAR(MAX),
		LOGIN_TIME			DATETIME,	
		LAST_BATCH			DATETIME,	
		STATUS				NCHAR(60),
		HOSTNAME			NCHAR(256),
		PROGRAM_NAME		NCHAR(256),
		CMD					NCHAR(52),
		LOGINAME			NCHAR(256),
		CLIENT_NET_ADDRESS	NVARCHAR(96)
	)

	CREATE TABLE #input_buffer
	(
		SEQ	  SMALLINT IDENTITY(1,1),
		_EVENTTYPE NVARCHAR(30),
		_PARAMETERS INT,
		_EVENTINFO NVARCHAR(MAX)
	)
	
	DECLARE @MAX_SEQ INT,
			@CURRENT_SEQ INT,
			@CURRENT_SPID SMALLINT

	
	INSERT INTO #TMP (SPID)
	SELECT 	DISTINCT CONVERT (SMALLINT, REQ_SPID) AS SPID
	  FROM 	MASTER.DBO.SYSLOCKINFO,
			MASTER.DBO.SPT_VALUES V,
			MASTER.DBO.SPT_VALUES X,
			MASTER.DBO.SPT_VALUES U

	  WHERE MASTER.DBO.SYSLOCKINFO.RSC_TYPE = V.NUMBER 
	    AND V.TYPE = 'LR'
	    AND MASTER.DBO.SYSLOCKINFO.REQ_STATUS = X.NUMBER 
		AND X.TYPE = 'LS'
	    AND MASTER.DBO.SYSLOCKINFO.REQ_MODE + 1 = U.NUMBER AND U.TYPE = 'L'
	    AND SUBSTRING (U.NAME, 1, 8) = 'X'
	ORDER BY SPID


	SELECT @MAX_SEQ = COUNT(1) FROM #TMP
	SET @CURRENT_SEQ = 1

	WHILE @CURRENT_SEQ <= @MAX_SEQ

		BEGIN
			SELECT @CURRENT_SPID = SPID FROM #TMP WHERE SEQ = @CURRENT_SEQ
			
			-- Insert the input buffer information into the temporary table
			INSERT INTO #INPUT_BUFFER (_EVENTTYPE, _PARAMETERS, _EVENTINFO)
			EXEC('DBCC INPUTBUFFER(' +@CURRENT_SPID  + ')')



			UPDATE A
			   SET A.LOGIN_TIME			= B.LOGIN_TIME,			
				   A.LAST_BATCH			= B.LAST_BATCH,			
				   A.STATUS				= B.STATUS,				
				   A.PROGRAM_NAME		= B.PROGRAM_NAME,		
				   A.CMD				= B.CMD,				
				   A.CLIENT_NET_ADDRESS	= B.CLIENT_NET_ADDRESS,	
				   A.HOSTNAME			= B.HOSTNAME,			
				   A.LOGINAME			= B.LOGINAME			
			  FROM #TMP A 
			  INNER JOIN (
							SELECT  P.SPID,
									P.LOGIN_TIME,
									P.LAST_BATCH,
									P.STATUS,
									P.PROGRAM_NAME,
									P.CMD,
									C.CLIENT_NET_ADDRESS,
									P.HOSTNAME,
									P.LOGINAME
							  FROM  SYS.SYSPROCESSES AS P
							 INNER JOIN SYS.DM_EXEC_CONNECTIONS AS C ON P.SPID = C.SESSION_ID
							 WHERE P.SPID = @CURRENT_SPID
						  ) B ON A.SPID = B.SPID

			SET @CURRENT_SEQ = @CURRENT_SEQ + 1
	END

	UPDATE A
	   SET A.EVENTTYPE	= B._EVENTTYPE,
		   A.PARAMETERS	= B._PARAMETERS,
		   A.EVENTINFO  = B._EVENTINFO
	  FROM #TMP AS A
	 INNER JOIN #INPUT_BUFFER B ON B.SEQ = A.SEQ 


	SELECT SPID
		 , CLIENT_NET_ADDRESS
		 , HOSTNAME
		 , CMD
		 , STATUS
		 , PARAMETERS
		 , EVENTINFO
		 , LOGINAME
		 , LOGIN_TIME
		 , LAST_BATCH
		 , EVENTTYPE
		 , PROGRAM_NAME
	 FROM  #TMP


	DROP TABLE #INPUT_BUFFER
	DROP TABLE #TMP

END

RETURN (0) 


